{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/component/map.js","webpack:///./src/javascript/component/draw.js","webpack:///./src/javascript/component/dom.js","webpack:///./src/javascript/component/fight.js","webpack:///./src/javascript/component/player.js","webpack:///./src/javascript/component/weapons.js","webpack:///./src/javascript/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","querySelector","width","height","ctx","getContext","mapArray","subArray","j","push","Math","random","drawGrid","ypos","xpos","beginPath","moveTo","fillStyle","fillRect","offset","strokeStyle","strokeRect","drawPlayer","player","setTimeout","drawImage","img","position","x","padding","y","drawWeapon","weapon","canvasPosition","p1DamageEl","p2DamageEl","p1WeaponEl","p2WeaponEl","playerTurnEl","updatePlayer1HP","updatePlayer2HP","updateHP","id","classList","add","textContent","health","remove","updateTurn","turn","fightBtnEl","defendBtnEl","gameOverEl","createElement","fightBox","playerOneDefend","playerTwoDefend","addEventListener","playerTurn","console","log","player1","damage","player2","updateHealth","setTurn","setAttribute","appendChild","startFight","disabled","randomCol","floor","randomRow","Player","this","hasWeapon","indexPosition","row","col","init","rowPosition","colPosition","Weapons","p1","p2","knife","sowrd","akm","p13","tileSize","m4","g3","ump","kar98","weaponPosition","oldWeapon","p1PreviousPosition","p2PreviousPosition","drawOldWeapon","maintainPreviousPosition","arrowKeysCode","clearCell","clearRect","chkWeapon","findIndex","updateWeapon","weaponIndex","updatePlayerProperties","updateOldWeaponPosition","splice","updatePlayerWeapon","updateWeaponState","innerHTML","outerHTML","updateWeaponUI","areClose","a","b","abs","moveLeft","moveUp","moveRight","moveDown","window","e","keyCode","length"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { offset } from \"../index\";\r\n// get random number\r\nlet min = 0;\r\nlet max = 9;\r\nconst randomNumber = () => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\nlet random_boolean = () => Math.random() <= 0.1;\r\n// Initiate Canvas board\r\nlet canvas = document.querySelector(\"#canvas\");\r\ncanvas.width = 1030;\r\ncanvas.height = 610;\r\nlet ctx = canvas.getContext(\"2d\");\r\n\r\n// This array  decide the box will be blocked or not\r\nlet mapArray = [];\r\n\r\nfor (let i = 0; i <= 8; i++) {\r\n  let subArray = [];\r\n  for (let j = 0; j <= 15; j++) {\r\n    subArray.push(random_boolean());\r\n  }\r\n  mapArray.push(subArray);\r\n}\r\n// Drwa Grid\r\nconst drawGrid = () => {\r\n  // Y pointer at the beginning\r\n  let ypos = 0;\r\n  for (let i = 0; i <= 8; i++) {\r\n    // X pointer at the beginning\r\n    let xpos = 0;\r\n    for (let j = 0; j <= 15; j++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(xpos, ypos);\r\n      if (mapArray[i][j] === true) {\r\n        ctx.fillStyle = \"#535c68\";\r\n        ctx.fillRect(xpos, ypos, offset, offset);\r\n      } else {\r\n        ctx.strokeStyle = \"#000000\";\r\n        ctx.strokeRect(xpos, ypos, offset, offset);\r\n      }\r\n      /// Increment x pointer by 80px after every iteration\r\n      xpos += offset;\r\n    }\r\n    /// Increment y pointer by 80px after every iteration\r\n    ypos += offset;\r\n  }\r\n};\r\n\r\n// Draw player to grid\r\nconst drawPlayer = (xPosition, yPosition) => {\r\n  ctx.beginPath();\r\n  ctx.moveTo(xPosition, yPosition);\r\n  ctx.fillStyle = \"#2f2f2f\";\r\n  ctx.fillRect(xPosition + 10, yPosition + 10, 20, 20);\r\n};\r\nexport { mapArray, ctx };\r\nexport default drawGrid;\r\n","import { ctx } from \"./map\";\r\nimport { padding } from \"../index\";\r\nconst drawPlayer = player => {\r\n  setTimeout(() => {\r\n    ctx.drawImage(\r\n      player.img,\r\n      player.position.x + padding,\r\n      player.position.y + padding,\r\n      50,\r\n      50\r\n    );\r\n  }, 500);\r\n};\r\nconst drawWeapon = weapon => {\r\n  ctx.drawImage(\r\n    weapon.img,\r\n    weapon.canvasPosition.x + 10,\r\n    weapon.canvasPosition.y + 10,\r\n    50,\r\n    50\r\n  );\r\n};\r\n\r\nexport { drawPlayer, drawWeapon };\r\n","import \"../../../node_modules/animate.css\";\r\nconst p1DamageEl = document.querySelector(\".player1-damage\");\r\nconst p2DamageEl = document.querySelector(\".player2-damage\");\r\nconst p1WeaponEl = document.querySelector(\".player1-weapon\");\r\nconst p2WeaponEl = document.querySelector(\".player2-weapon\");\r\nconst playerTurnEl = document.querySelector(\".player__turn\");\r\nconst updatePlayer1HP = document.querySelector(\".player1-hp\");\r\nconst updatePlayer2HP = document.querySelector(\".player2-hp\");\r\n\r\nconst updateHP = player => {\r\n  if (player.id === 1) {\r\n    updatePlayer1HP.classList.add(\"animated\", \"bounce\");\r\n    updatePlayer1HP.textContent = `${player.health}`;\r\n    setTimeout(() => {\r\n      updatePlayer1HP.classList.remove(\"animated\", \"bounce\");\r\n    }, 1000);\r\n  } else if (player.id === 2) {\r\n    updatePlayer2HP.classList.add(\"animated\", \"bounce\");\r\n    updatePlayer2HP.textContent = `${player.health}`;\r\n    setTimeout(() => {\r\n      updatePlayer2HP.classList.remove(\"animated\", \"bounce\");\r\n    }, 1000);\r\n  }\r\n};\r\nconst updateWeaponUI = player => {\r\n  if (player.id === 1) {\r\n    p1DamageEl.textContent = `${player.damage}`;\r\n    p1WeaponEl.innerHTML = player.weapon.img.outerHTML;\r\n  } else if (player.id === 2) {\r\n    p2DamageEl.textContent = `${player.damage}`;\r\n    p2WeaponEl.innerHTML = player.weapon.img.outerHTML;\r\n  }\r\n};\r\n\r\nconst updateTurn = turn => {\r\n  playerTurnEl.textContent = `${turn}`;\r\n};\r\nexport { updateWeaponUI, updateTurn, updateHP };\r\n","import { player1, player2, playerTurn, setTurn } from \"../index\";\r\nimport { updateTurn, updateWeaponUI, updateHP } from \"../component/dom\";\r\nconst fightBtnEl = document.querySelector(\".fight__btn\");\r\nconst defendBtnEl = document.querySelector(\".defend__btn\");\r\nconst gameOverEl = document.createElement(\"p\");\r\nconst fightBox = document.querySelector(\".gameOver\");\r\nlet playerOneDefend = false;\r\nlet playerTwoDefend = false;\r\n\r\nconst startFight = (player1, player2, playerTurn) => {\r\n  fightBtnEl.disabled = false;\r\n  defendBtnEl.disabled = false;\r\n};\r\nfightBtnEl.addEventListener(\"click\", () => {\r\n  if (playerTurn === 1) {\r\n    if (playerTwoDefend) {\r\n      console.log(player1.damage / 2);\r\n      player2.updateHealth(player1.damage / 2);\r\n      playerTwoDefend = !playerTwoDefend;\r\n    } else {\r\n      player2.updateHealth(player1.damage);\r\n    }\r\n    updateHP(player2);\r\n    setTurn(2);\r\n    updateTurn(2);\r\n    if (player2.health <= 0) {\r\n      fightBtnEl.setAttribute(\"disabled\", \"true\");\r\n      gameOverEl.textContent = `Game Over, Player 1 wins`;\r\n      fightBox.appendChild(gameOverEl);\r\n    }\r\n  } else if (playerTurn === 2) {\r\n    if (playerOneDefend) {\r\n      player1.updateHealth(player2.damage / 2);\r\n      playerOneDefend = !playerOneDefend;\r\n    } else {\r\n      player1.updateHealth(player2.damage);\r\n    }\r\n    updateHP(player1);\r\n    setTurn(1);\r\n    updateTurn(1);\r\n    if (player1.health <= 0) {\r\n      fightBtnEl.setAttribute(\"disabled\", \"true\");\r\n      gameOverEl.textContent = `Game Over, Player 2 wins`;\r\n      fightBox.appendChild(gameOverEl);\r\n    }\r\n  }\r\n});\r\ndefendBtnEl.addEventListener(\"click\", () => {\r\n  if (playerTurn === 1) {\r\n    playerOneDefend = true;\r\n    setTurn(2);\r\n    updateTurn(2);\r\n  } else if (playerTurn === 2) {\r\n    playerTwoDefend = true;\r\n    setTurn(1);\r\n    updateTurn(1);\r\n  }\r\n});\r\nexport default startFight;\r\n","import { mapArray } from \"./map\";\r\nimport { offset } from \"../index\";\r\nlet min = 0;\r\nlet maxCol = 15;\r\nlet maxRow = 8;\r\nconst randomCol = () => Math.floor(Math.random() * (maxCol - min + 1)) + min;\r\nconst randomRow = () => Math.floor(Math.random() * (maxRow - min + 1)) + min;\r\nclass Player {\r\n  constructor(id, img, damage = 10, health = 100, weapon = {}) {\r\n    this.id = id;\r\n    this.img = img;\r\n    this.damage = damage;\r\n    this.health = health;\r\n    this.hasWeapon = false;\r\n    this.weapon = weapon;\r\n    this.position = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.indexPosition = {\r\n      row: 0,\r\n      col: 0\r\n    };\r\n    this.init = () => {\r\n      // Get random row and col indexes for they player position\r\n      let rowPosition = randomRow();\r\n      let colPosition = randomCol();\r\n      // Check if the cell is blocked or not\r\n      if (!mapArray[rowPosition][colPosition]) {\r\n        // Check if it is first row\r\n        if (rowPosition > 0) {\r\n          // if the row is greater than one increment y pointer 40*noOfRows\r\n          for (let i = 0; i < rowPosition; i++) {\r\n            this.position.y += offset;\r\n          }\r\n        }\r\n        // Check if it is first col\r\n        if (colPosition > 0) {\r\n          // if the col is greater than one increment x pointer 40*noOfCols\r\n          for (let j = 0; j < colPosition; j++) {\r\n            this.position.x += offset;\r\n          }\r\n        }\r\n        // Updating player index position\r\n        this.indexPosition.row = rowPosition;\r\n        this.indexPosition.col = colPosition;\r\n      } else {\r\n        // If 'if' condition fails this function will be called again. Recursive function\r\n        return this.init();\r\n      }\r\n    };\r\n    this.init();\r\n  }\r\n  moveLeft() {\r\n    this.position.x -= offset;\r\n    this.indexPosition.col -= 1;\r\n  }\r\n  moveUp() {\r\n    this.position.y -= offset;\r\n    this.indexPosition.row -= 1;\r\n  }\r\n  moveRight() {\r\n    this.position.x += offset;\r\n    this.indexPosition.col += 1;\r\n  }\r\n  moveDown() {\r\n    this.position.y += offset;\r\n    this.indexPosition.row += 1;\r\n  }\r\n  updatePlayerProperties(damage) {\r\n    this.damage = damage;\r\n  }\r\n  updatePlayerWeapon(weapon) {\r\n    this.weapon = weapon;\r\n  }\r\n  updateWeaponState() {\r\n    this.hasWeapon = true;\r\n  }\r\n  updateHealth(health) {\r\n    console.log(health);\r\n    this.health -= health;\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import { mapArray } from \"./map\";\r\nimport { offset } from \"../index\";\r\nlet min = 0;\r\nlet maxCol = 15;\r\nlet maxRow = 8;\r\nconst randomCol = () => Math.floor(Math.random() * (maxCol - min + 1)) + min;\r\nconst randomRow = () => Math.floor(Math.random() * (maxRow - min + 1)) + min;\r\nexport default class Weapons {\r\n  constructor(img, damage, id) {\r\n    this.img = img;\r\n    this.damage = damage;\r\n    this.id = id;\r\n    this.canvasPosition = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.indexPosition = {\r\n      row: 0,\r\n      col: 0\r\n    };\r\n    this.init = () => {\r\n      // Get random row and col indexes for they player position\r\n      let rowPosition = randomRow();\r\n      let colPosition = randomCol();\r\n      // Check if the cell is blocked or not\r\n      if (!mapArray[rowPosition][colPosition]) {\r\n        // Check if it is first row\r\n        if (rowPosition > 0) {\r\n          // if the row is greater than one increment y pointer 40*noOfRows\r\n          for (let i = 0; i < rowPosition; i++) {\r\n            this.canvasPosition.y += 64;\r\n          }\r\n        }\r\n        // Check if it is first col\r\n        if (colPosition > 0) {\r\n          // if the col is greater than one increment x pointer 40*noOfCols\r\n          for (let j = 0; j < colPosition; j++) {\r\n            this.canvasPosition.x += 64;\r\n          }\r\n        }\r\n        // Updating player index position\r\n        this.indexPosition.row = rowPosition;\r\n        this.indexPosition.col = colPosition;\r\n      } else {\r\n        // If 'if' condition fails this function will be called again. Recursive function\r\n        return this.init();\r\n      }\r\n    };\r\n    this.init();\r\n  }\r\n  updateWeaponPosition(canvasPosition, indexPosition) {\r\n    this.canvasPosition = canvasPosition;\r\n    this.indexPosition = indexPosition;\r\n  }\r\n}\r\n","import \"../sass/main.scss\";\r\n// import \"./component/map\";\r\nimport drawGrid, { mapArray, ctx } from \"./component/map\";\r\nimport { drawPlayer, drawWeapon } from \"./component/draw\";\r\nimport startFight from \"./component/fight\";\r\nimport Player from \"./component/player\";\r\nimport Weapons from \"./component/weapons\";\r\nimport { updateWeaponUI, updateTurn } from \"./component/dom\";\r\n\r\nconst p1 = document.querySelector(\"#player1\");\r\nconst p2 = document.querySelector(\"#player2\");\r\nconst knife = document.querySelector(\"#knife\");\r\nconst sowrd = document.querySelector(\"#sowrd\");\r\nconst akm = document.querySelector(\"#akm\");\r\nconst p13 = document.querySelector(\"#p13\");\r\n\r\nlet playerTurn = 1;\r\nlet tileSize = 64;\r\n\r\nconst setTurn = value => {\r\n  playerTurn = value;\r\n};\r\nconst m4 = new Weapons(knife, 20, 1);\r\nconst g3 = new Weapons(akm, 15, 2);\r\nconst ump = new Weapons(sowrd, 50, 3);\r\nconst kar98 = new Weapons(p13, 40, 4);\r\nconst weaponPosition = [m4, g3, ump, kar98];\r\n\r\nsetTimeout(() => {\r\n  drawWeapon(m4);\r\n  drawWeapon(g3);\r\n  drawWeapon(ump);\r\n  drawWeapon(kar98);\r\n}, 500);\r\nconst offset = 64;\r\nconst padding = 5;\r\nlet oldWeapon = {\r\n  indexPosition: {\r\n    row: 0,\r\n    col: 0\r\n  }\r\n};\r\nlet p1PreviousPosition = {\r\n  canvasPosition: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  indexPosition: {\r\n    row: 0,\r\n    col: 0\r\n  }\r\n};\r\nlet p2PreviousPosition = {\r\n  canvasPosition: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  indexPosition: {\r\n    row: 0,\r\n    col: 0\r\n  }\r\n};\r\nconst drawOldWeapon = (weapon, player) => {\r\n  if (player.id === 1) {\r\n    if (\r\n      weapon.indexPosition.row === p1PreviousPosition.indexPosition.row &&\r\n      weapon.indexPosition.col === p1PreviousPosition.indexPosition.col\r\n    ) {\r\n      drawWeapon(weapon);\r\n    }\r\n  } else if (player.id === 2) {\r\n    if (\r\n      weapon.indexPosition.row === p2PreviousPosition.indexPosition.row &&\r\n      weapon.indexPosition.col === p2PreviousPosition.indexPosition.col\r\n    ) {\r\n      drawWeapon(weapon);\r\n    }\r\n  }\r\n};\r\n\r\nconst updateOldWeaponPosition = (weapon, player) => {\r\n  weapon.canvasPosition = {\r\n    x: player.position.x,\r\n    y: player.position.y\r\n  };\r\n  weapon.indexPosition = {\r\n    row: player.indexPosition.row,\r\n    col: player.indexPosition.col\r\n  };\r\n};\r\nconst maintainPreviousPosition = player => {\r\n  if (player.id === 1) {\r\n    p1PreviousPosition.canvasPosition = {\r\n      x: player.position.x,\r\n      y: player.position.y\r\n    };\r\n    p1PreviousPosition.indexPosition = {\r\n      row: player.indexPosition.row,\r\n      col: player.indexPosition.col\r\n    };\r\n  } else if (player.id === 2) {\r\n    p2PreviousPosition.canvasPosition = {\r\n      x: player.position.x,\r\n      y: player.position.y\r\n    };\r\n    p2PreviousPosition.indexPosition = {\r\n      row: player.indexPosition.row,\r\n      col: player.indexPosition.col\r\n    };\r\n  }\r\n};\r\nconst arrowKeysCode = {\r\n  left: 37,\r\n  up: 38,\r\n  right: 39,\r\n  down: 40\r\n};\r\n\r\n// Draw grid to canvas\r\ndrawGrid();\r\n\r\n// Create new Player\r\nconst player1 = new Player(1, p1);\r\nconst player2 = new Player(2, p2);\r\n\r\n// Clear cell when player leaves\r\nconst clearCell = player => {\r\n  ctx.clearRect(player.position.x + 5, player.position.y + 5, 55, 55);\r\n};\r\nconst chkWeapon = player => {\r\n  return weaponPosition.findIndex(weapon => {\r\n    return (\r\n      player.indexPosition.row === weapon.indexPosition.row &&\r\n      player.indexPosition.col === weapon.indexPosition.col\r\n    );\r\n  });\r\n};\r\n/// Update weapon\r\nconst updateWeapon = (weaponIndex, player) => {\r\n  let weapon = weaponPosition[weaponIndex];\r\n  player.updatePlayerProperties(weapon.damage);\r\n\r\n  if (player.hasWeapon) {\r\n    oldWeapon = player.weapon;\r\n    updateOldWeaponPosition(oldWeapon, player);\r\n    weaponPosition.push(oldWeapon);\r\n    weaponPosition.splice(weaponIndex, 1);\r\n    console.log(player, weapon, oldWeapon);\r\n    player.updatePlayerWeapon(weapon);\r\n  } else {\r\n    weaponPosition.splice(weaponIndex, 1);\r\n    player.updateWeaponState();\r\n    player.updatePlayerWeapon(weapon);\r\n  }\r\n  updateWeaponUI(player);\r\n};\r\n// Draw player to canvas\r\ndrawPlayer(player1);\r\ndrawPlayer(player2);\r\n\r\nfunction areClose(a, b) {\r\n  return (\r\n    Math.abs(a.position.x - b.position.x) < 2 * tileSize &&\r\n    Math.abs(a.position.y - b.position.y) < 2 * tileSize\r\n  );\r\n}\r\nconst moveLeft = player => {\r\n  maintainPreviousPosition(player);\r\n  clearCell(player);\r\n  player.moveLeft();\r\n  if (areClose(player1, player2)) {\r\n    startFight(player1, player2, playerTurn);\r\n  }\r\n\r\n  let weaponIndex = chkWeapon(player);\r\n  if (weaponIndex > -1) {\r\n    updateWeapon(weaponIndex, player);\r\n    drawPlayer(player);\r\n  } else {\r\n    drawPlayer(player);\r\n  }\r\n  drawOldWeapon(oldWeapon, player);\r\n};\r\nconst moveUp = player => {\r\n  maintainPreviousPosition(player);\r\n  clearCell(player);\r\n\r\n  player.moveUp();\r\n\r\n  if (areClose(player1, player2)) {\r\n    startFight(player1, player2, playerTurn);\r\n  }\r\n\r\n  let weaponIndex = chkWeapon(player);\r\n  if (weaponIndex > -1) {\r\n    updateWeapon(weaponIndex, player);\r\n    drawPlayer(player);\r\n  } else {\r\n    drawPlayer(player);\r\n  }\r\n  drawOldWeapon(oldWeapon, player);\r\n};\r\nconst moveRight = player => {\r\n  {\r\n    maintainPreviousPosition(player);\r\n    clearCell(player);\r\n\r\n    player.moveRight();\r\n    if (areClose(player1, player2)) {\r\n      startFight(player1, player2, playerTurn);\r\n    }\r\n\r\n    let weaponIndex = chkWeapon(player);\r\n    if (weaponIndex > -1) {\r\n      updateWeapon(weaponIndex, player);\r\n      drawPlayer(player);\r\n    } else {\r\n      drawPlayer(player);\r\n    }\r\n    drawOldWeapon(oldWeapon, player);\r\n  }\r\n};\r\nconst moveDown = player => {\r\n  {\r\n    maintainPreviousPosition(player);\r\n    clearCell(player);\r\n    player.moveDown();\r\n\r\n    if (areClose(player1, player2)) {\r\n      startFight(player1, player2, playerTurn);\r\n    }\r\n\r\n    let weaponIndex = chkWeapon(player);\r\n    if (weaponIndex > -1) {\r\n      updateWeapon(weaponIndex, player);\r\n      drawPlayer(player);\r\n    } else {\r\n      drawPlayer(player);\r\n    }\r\n    drawOldWeapon(oldWeapon, player);\r\n  }\r\n};\r\n// Event listener for the arrow keys\r\nwindow.addEventListener(\"keydown\", e => {\r\n  switch (e.keyCode) {\r\n    case arrowKeysCode.left:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row][\r\n              player1.indexPosition.col - 1\r\n            ] &&\r\n            player1.indexPosition.col > 0\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n            moveLeft(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row][\r\n              player2.indexPosition.col - 1\r\n            ] &&\r\n            player2.indexPosition.col > 0\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveLeft(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.up:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row - 1][\r\n              player1.indexPosition.col\r\n            ] &&\r\n            player1.indexPosition.row > 0\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n\r\n            moveUp(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row - 1][\r\n              player2.indexPosition.col\r\n            ] &&\r\n            player2.indexPosition.row > 0\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveUp(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.right:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row][\r\n              player1.indexPosition.col + 1\r\n            ] &&\r\n            player1.indexPosition.col <\r\n              mapArray[player1.indexPosition.row].length - 1\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n\r\n            moveRight(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row][\r\n              player2.indexPosition.col + 1\r\n            ] &&\r\n            player2.indexPosition.col <\r\n              mapArray[player2.indexPosition.row].length - 1\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveRight(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.down:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row + 1][\r\n              player1.indexPosition.col\r\n            ] &&\r\n            player1.indexPosition.row < mapArray.length - 1\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n\r\n            moveDown(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row + 1][\r\n              player2.indexPosition.col\r\n            ] &&\r\n            player2.indexPosition.row < mapArray.length - 1\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveDown(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n  }\r\n});\r\n\r\nexport { padding, player1, player2, playerTurn, setTurn, offset };\r\n"],"sourceRoot":""}