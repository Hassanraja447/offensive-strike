{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/component/map.js","webpack:///./src/javascript/component/draw.js","webpack:///./src/javascript/component/player.js","webpack:///./src/javascript/component/weapons.js","webpack:///./src/javascript/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","querySelector","width","height","ctx","getContext","mapArray","subArray","j","push","Math","random","drawGrid","ypos","xpos","beginPath","moveTo","fillStyle","fillRect","strokeStyle","strokeRect","drawPlayer","player","setTimeout","drawImage","img","position","x","padding","y","drawWeapon","weapon","canvasPosition","randomCol","floor","randomRow","Player","damage","this","hasWeapon","indexPosition","row","col","init","rowPosition","colPosition","console","log","Weapons","id","p1","p2","coconut","lemon","donut","cupcake","turn","m4","g3","ump","kar98","weaponPosition","previousPosition","arrowKeysCode","player1","player2","clearCell","clearRect","chkWeapon","findIndex","updateWeapon","weaponIndex","updatePlayerProperties","moveLeft","moveUp","moveRight","moveDown","window","addEventListener","e","keyCode","length"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// get random number\r\nlet min = 0;\r\nlet max = 9;\r\nconst randomNumber = () => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\nlet random_boolean = () => Math.random() <= 0.1;\r\n// Initiate Canvas board\r\nlet canvas = document.querySelector(\"#canvas\");\r\ncanvas.width = 1280;\r\ncanvas.height = 720;\r\nlet ctx = canvas.getContext(\"2d\");\r\n\r\n// This array  decide the box will be blocked or not\r\nlet mapArray = [];\r\n\r\nfor (let i = 0; i <= 8; i++) {\r\n  let subArray = [];\r\n  for (let j = 0; j <= 15; j++) {\r\n    subArray.push(random_boolean());\r\n  }\r\n  mapArray.push(subArray);\r\n}\r\n// Drwa Grid\r\nconst drawGrid = () => {\r\n  // Y pointer at the beginning\r\n  let ypos = 0;\r\n  for (let i = 0; i <= 8; i++) {\r\n    // X pointer at the beginning\r\n    let xpos = 0;\r\n    for (let j = 0; j <= 15; j++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(xpos, ypos);\r\n      if (mapArray[i][j] === true) {\r\n        ctx.fillStyle = \"#FF0000\";\r\n        ctx.fillRect(xpos, ypos, 80, 80);\r\n      } else {\r\n        ctx.strokeStyle = \"#000000\";\r\n        ctx.strokeRect(xpos, ypos, 80, 80);\r\n      }\r\n      /// Increment x pointer by 80px after every iteration\r\n      xpos += 80;\r\n    }\r\n    /// Increment y pointer by 80px after every iteration\r\n    ypos += 80;\r\n  }\r\n};\r\n\r\n// Draw player to grid\r\nconst drawPlayer = (xPosition, yPosition) => {\r\n  ctx.beginPath();\r\n  ctx.moveTo(xPosition, yPosition);\r\n  ctx.fillStyle = \"#2f2f2f\";\r\n  ctx.fillRect(xPosition + 10, yPosition + 10, 20, 20);\r\n};\r\nexport { mapArray, ctx };\r\nexport default drawGrid;\r\n","import { ctx } from \"./map\";\r\nimport { padding } from \"../index\";\r\nconst drawPlayer = player => {\r\n  setTimeout(() => {\r\n    ctx.drawImage(\r\n      player.img,\r\n      player.position.x + padding,\r\n      player.position.y + padding,\r\n      50,\r\n      50\r\n    );\r\n  }, 500);\r\n};\r\nconst drawWeapon = weapon => {\r\n  ctx.drawImage(\r\n    weapon.img,\r\n    weapon.canvasPosition.x + 10,\r\n    weapon.canvasPosition.y + 10,\r\n    50,\r\n    50\r\n  );\r\n};\r\n\r\nexport { drawPlayer, drawWeapon };\r\n","import { mapArray } from \"./map\";\r\nlet min = 0;\r\nlet maxCol = 15;\r\nlet maxRow = 8;\r\nconst randomCol = () => Math.floor(Math.random() * (maxCol - min + 1)) + min;\r\nconst randomRow = () => Math.floor(Math.random() * (maxRow - min + 1)) + min;\r\nclass Player {\r\n  constructor(img, damage, weapon = {}) {\r\n    this.img = img;\r\n    this.damage = damage;\r\n    this.hasWeapon = false;\r\n    this.weapon = weapon;\r\n    this.position = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.indexPosition = {\r\n      row: 0,\r\n      col: 0\r\n    };\r\n    this.init = () => {\r\n      // Get random row and col indexes for they player position\r\n      let rowPosition = randomRow();\r\n      let colPosition = randomCol();\r\n      // Check if the cell is blocked or not\r\n      if (!mapArray[rowPosition][colPosition]) {\r\n        // Check if it is first row\r\n        if (rowPosition > 0) {\r\n          // if the row is greater than one increment y pointer 40*noOfRows\r\n          for (let i = 0; i < rowPosition; i++) {\r\n            this.position.y += 80;\r\n          }\r\n        }\r\n        // Check if it is first col\r\n        if (colPosition > 0) {\r\n          // if the col is greater than one increment x pointer 40*noOfCols\r\n          for (let j = 0; j < colPosition; j++) {\r\n            this.position.x += 80;\r\n          }\r\n        }\r\n        // Updating player index position\r\n        this.indexPosition.row = rowPosition;\r\n        this.indexPosition.col = colPosition;\r\n      } else {\r\n        // If 'if' condition fails this function will be called again. Recursive function\r\n        return this.init();\r\n      }\r\n    };\r\n    this.init();\r\n  }\r\n  updatePlayerProperties(damage) {\r\n    if (this.hasWeapon) {\r\n      this.damage = damage + 100;\r\n    }\r\n    console.log(this.damage);\r\n  }\r\n  updatePlayerWeapon(weapon) {\r\n    this.weapon = weapon;\r\n  }\r\n  updateWeaponState() {\r\n    this.hasWeapon = true;\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import { mapArray } from \"./map\";\r\nlet min = 0;\r\nlet maxCol = 15;\r\nlet maxRow = 8;\r\nconst randomCol = () => Math.floor(Math.random() * (maxCol - min + 1)) + min;\r\nconst randomRow = () => Math.floor(Math.random() * (maxRow - min + 1)) + min;\r\nexport default class Weapons {\r\n  constructor(img, damage, id) {\r\n    this.img = img;\r\n    this.damage = damage;\r\n    this.id = id;\r\n    this.canvasPosition = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.indexPosition = {\r\n      row: 0,\r\n      col: 0\r\n    };\r\n    this.init = () => {\r\n      // Get random row and col indexes for they player position\r\n      let rowPosition = randomRow();\r\n      let colPosition = randomCol();\r\n      // Check if the cell is blocked or not\r\n      if (!mapArray[rowPosition][colPosition]) {\r\n        // Check if it is first row\r\n        if (rowPosition > 0) {\r\n          // if the row is greater than one increment y pointer 40*noOfRows\r\n          for (let i = 0; i < rowPosition; i++) {\r\n            this.canvasPosition.y += 80;\r\n          }\r\n        }\r\n        // Check if it is first col\r\n        if (colPosition > 0) {\r\n          // if the col is greater than one increment x pointer 40*noOfCols\r\n          for (let j = 0; j < colPosition; j++) {\r\n            this.canvasPosition.x += 80;\r\n          }\r\n        }\r\n        // Updating player index position\r\n        this.indexPosition.row = rowPosition;\r\n        this.indexPosition.col = colPosition;\r\n      } else {\r\n        // If 'if' condition fails this function will be called again. Recursive function\r\n        return this.init();\r\n      }\r\n    };\r\n    this.init();\r\n  }\r\n  updateWeaponPosition(canvasPosition, indexPosition) {\r\n    this.canvasPosition = canvasPosition;\r\n    this.indexPosition = indexPosition;\r\n  }\r\n}\r\n","import \"../sass/main.scss\";\r\n// import \"./component/map\";\r\nimport drawGrid, { mapArray, ctx } from \"./component/map\";\r\nimport { drawPlayer, drawWeapon } from \"./component/draw\";\r\nimport Player from \"./component/player\";\r\nimport Weapons from \"./component/weapons\";\r\n\r\nconst p1 = document.querySelector(\"#player1\");\r\nconst p2 = document.querySelector(\"#player2\");\r\nconst coconut = document.querySelector(\"#coconut\");\r\nconst lemon = document.querySelector(\"#lemon\");\r\nconst donut = document.querySelector(\"#donut\");\r\nconst cupcake = document.querySelector(\"#cupcake\");\r\nlet turn = 1;\r\n\r\nconst m4 = new Weapons(coconut, 90, 1);\r\nconst g3 = new Weapons(lemon, 60, 2);\r\nconst ump = new Weapons(cupcake, 50, 3);\r\nconst kar98 = new Weapons(donut, 95, 4);\r\nconst weaponPosition = [m4, g3, ump, kar98];\r\n\r\nsetTimeout(() => {\r\n  drawWeapon(m4);\r\n  drawWeapon(g3);\r\n  drawWeapon(ump);\r\n  drawWeapon(kar98);\r\n}, 500);\r\nconst offset = 80;\r\nconst padding = 20;\r\nlet previousPosition = {\r\n  canvasPosition: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  indexPosition: {\r\n    row: 0,\r\n    col: 0\r\n  }\r\n};\r\nconst arrowKeysCode = {\r\n  left: 37,\r\n  up: 38,\r\n  right: 39,\r\n  down: 40\r\n};\r\n\r\n// Draw grid to canvas\r\ndrawGrid();\r\n\r\n// Create new Player\r\nconst player1 = new Player(p1, 100);\r\nconst player2 = new Player(p2, 100);\r\n\r\n// Clear cell when player leaves\r\nconst clearCell = player => {\r\n  ctx.clearRect(player.position.x + 5, player.position.y + 5, 70, 70);\r\n};\r\nconst chkWeapon = () => {\r\n  console.log(previousPosition);\r\n\r\n  return weaponPosition.findIndex(weapon => {\r\n    return (\r\n      player1.indexPosition.row === weapon.indexPosition.row &&\r\n      player1.indexPosition.col === weapon.indexPosition.col\r\n    );\r\n  });\r\n};\r\n/// Update weapon\r\nconst updateWeapon = weaponIndex => {\r\n  let weapon = weaponPosition[weaponIndex];\r\n  player1.updatePlayerProperties(weapon.damage);\r\n\r\n  // if (player1.hasWeapon) {\r\n  //   // weaponPosition.push(player1.weapon);\r\n  //   // weaponPosition.splice(weaponIndex, 1);\r\n  //   player1.weapon.updateWeaponPosition(\r\n  //     previousPosition.canvasPosition,\r\n  //     previousPosition.indexPosition\r\n  //   );\r\n  //   drawPlayer(player1);\r\n  //   drawWeapon(player1.weapon);\r\n  //   player1.updatePlayerWeapon(weapon);\r\n  // } else {\r\n  //   player1.updateWeaponState();\r\n  //   player1.updatePlayerWeapon(weapon);\r\n  //   weaponPosition.splice(weaponIndex, 1);\r\n  // }\r\n};\r\n// Draw player to canvas\r\ndrawPlayer(player1);\r\ndrawPlayer(player2);\r\n\r\nconst moveLeft = player => {\r\n  clearCell(player);\r\n  player.position.x -= offset;\r\n  player.indexPosition.col -= 1;\r\n  let weaponIndex = chkWeapon();\r\n  if (weaponIndex > -1) {\r\n    updateWeapon(weaponIndex, previousPosition);\r\n  } else {\r\n    drawPlayer(player);\r\n  }\r\n};\r\nconst moveUp = player => {\r\n  clearCell(player);\r\n  player.position.y -= offset;\r\n  player.indexPosition.row -= 1;\r\n  let weaponIndex = chkWeapon();\r\n  if (weaponIndex > -1) {\r\n    updateWeapon(weaponIndex, previousPosition);\r\n  } else {\r\n    drawPlayer(player);\r\n  }\r\n};\r\nconst moveRight = player => {\r\n  {\r\n    clearCell(player);\r\n\r\n    player.position.x += offset;\r\n    player.indexPosition.col += 1;\r\n    let weaponIndex = chkWeapon();\r\n    if (weaponIndex > -1) {\r\n      updateWeapon(weaponIndex, previousPosition);\r\n    } else {\r\n      drawPlayer(player);\r\n    }\r\n  }\r\n};\r\nconst moveDown = player => {\r\n  {\r\n    clearCell(player);\r\n\r\n    player.position.y += offset;\r\n    player.indexPosition.row += 1;\r\n    let weaponIndex = chkWeapon();\r\n    if (weaponIndex > -1) {\r\n      updateWeapon(weaponIndex, previousPosition);\r\n    } else {\r\n      drawPlayer(player);\r\n    }\r\n  }\r\n};\r\n// Event listener for the arrow keys\r\nwindow.addEventListener(\"keydown\", e => {\r\n  switch (e.keyCode) {\r\n    case arrowKeysCode.left:\r\n      if (turn === 1) {\r\n        if (\r\n          !mapArray[player1.indexPosition.row][player1.indexPosition.col - 1] &&\r\n          player1.indexPosition.col > 0\r\n        ) {\r\n          moveLeft(player1);\r\n          turn = 2;\r\n        } else {\r\n          turn = 1;\r\n        }\r\n      } else if (turn === 2) {\r\n        if (\r\n          !mapArray[player2.indexPosition.row][player2.indexPosition.col - 1] &&\r\n          player2.indexPosition.col > 0\r\n        ) {\r\n          moveLeft(player2);\r\n          turn = 1;\r\n        } else {\r\n          turn = 2;\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.up:\r\n      if (turn === 1) {\r\n        if (\r\n          !mapArray[player1.indexPosition.row - 1][player1.indexPosition.col] &&\r\n          player1.indexPosition.row > 0\r\n        ) {\r\n          moveUp(player1);\r\n          turn = 2;\r\n        } else {\r\n          turn = 1;\r\n        }\r\n      } else if (turn === 2) {\r\n        if (\r\n          !mapArray[player2.indexPosition.row - 1][player2.indexPosition.col] &&\r\n          player2.indexPosition.row > 0\r\n        ) {\r\n          moveUp(player2);\r\n          turn = 1;\r\n        } else {\r\n          turn = 2;\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.right:\r\n      if (turn === 1) {\r\n        if (\r\n          !mapArray[player1.indexPosition.row][player1.indexPosition.col + 1] &&\r\n          player1.indexPosition.col <\r\n            mapArray[player1.indexPosition.row].length - 1\r\n        ) {\r\n          moveRight(player1);\r\n          turn = 2;\r\n        } else {\r\n          turn = 1;\r\n        }\r\n      } else if (turn === 2) {\r\n        if (\r\n          !mapArray[player2.indexPosition.row][player2.indexPosition.col + 1] &&\r\n          player2.indexPosition.col <\r\n            mapArray[player2.indexPosition.row].length - 1\r\n        ) {\r\n          moveRight(player2);\r\n          turn = 1;\r\n        } else {\r\n          turn = 2;\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.down:\r\n      if (turn === 1) {\r\n        if (\r\n          !mapArray[player1.indexPosition.row + 1][player1.indexPosition.col] &&\r\n          player1.indexPosition.row < mapArray.length - 1\r\n        ) {\r\n          moveDown(player1);\r\n          turn = 2;\r\n        } else {\r\n          turn = 1;\r\n        }\r\n      } else if (turn === 2) {\r\n        if (\r\n          !mapArray[player2.indexPosition.row + 1][player2.indexPosition.col] &&\r\n          player2.indexPosition.row < mapArray.length - 1\r\n        ) {\r\n          moveDown(player2);\r\n          turn = 1;\r\n        } else {\r\n          turn = 2;\r\n        }\r\n      }\r\n      break;\r\n  }\r\n});\r\n\r\nexport { padding };\r\n"],"sourceRoot":""}