{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/javascript/component/map.js","webpack:///./src/javascript/component/draw.js","webpack:///./src/javascript/component/dom.js","webpack:///./src/javascript/component/fight.js","webpack:///./src/javascript/component/player.js","webpack:///./src/javascript/component/weapons.js","webpack:///./src/javascript/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","canvas","document","querySelector","width","height","ctx","getContext","mapArray","subArray","j","push","Math","random","drawGrid","ypos","xpos","beginPath","moveTo","fillStyle","fillRect","strokeStyle","strokeRect","drawPlayer","player","setTimeout","drawImage","img","position","x","padding","y","drawWeapon","weapon","canvasPosition","p1DamageEl","p2DamageEl","playerTurnEl","updatePlayer1HP","updatePlayer2HP","updateHP","id","textContent","health","updateTurn","turn","fightBtnEl","gameOverEl","createElement","fightBox","addEventListener","console","log","player1","player2","playerTurn","updateHealth","damage","setTurn","setAttribute","appendChild","startFight","disabled","randomCol","floor","randomRow","Player","this","hasWeapon","indexPosition","row","col","init","rowPosition","colPosition","Weapons","p1","p2","knife","sowrd","akm","p13","tileSize","m4","g3","ump","kar98","weaponPosition","oldWeapon","p1PreviousPosition","p2PreviousPosition","drawOldWeapon","maintainPreviousPosition","arrowKeysCode","clearCell","clearRect","chkWeapon","findIndex","updateWeapon","weaponIndex","updatePlayerProperties","updateWeaponUI","updateOldWeaponPosition","splice","updatePlayerWeapon","updateWeaponState","areClose","a","b","abs","moveLeft","moveUp","moveRight","moveDown","window","e","keyCode","length"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// get random number\r\nlet min = 0;\r\nlet max = 9;\r\nconst randomNumber = () => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\nlet random_boolean = () => Math.random() <= 0.1;\r\n// Initiate Canvas board\r\nlet canvas = document.querySelector(\"#canvas\");\r\ncanvas.width = 1280;\r\ncanvas.height = 720;\r\nlet ctx = canvas.getContext(\"2d\");\r\n\r\n// This array  decide the box will be blocked or not\r\nlet mapArray = [];\r\n\r\nfor (let i = 0; i <= 8; i++) {\r\n  let subArray = [];\r\n  for (let j = 0; j <= 15; j++) {\r\n    subArray.push(random_boolean());\r\n  }\r\n  mapArray.push(subArray);\r\n}\r\n// Drwa Grid\r\nconst drawGrid = () => {\r\n  // Y pointer at the beginning\r\n  let ypos = 0;\r\n  for (let i = 0; i <= 8; i++) {\r\n    // X pointer at the beginning\r\n    let xpos = 0;\r\n    for (let j = 0; j <= 15; j++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(xpos, ypos);\r\n      if (mapArray[i][j] === true) {\r\n        ctx.fillStyle = \"#FF0000\";\r\n        ctx.fillRect(xpos, ypos, 80, 80);\r\n      } else {\r\n        ctx.strokeStyle = \"#000000\";\r\n        ctx.strokeRect(xpos, ypos, 80, 80);\r\n      }\r\n      /// Increment x pointer by 80px after every iteration\r\n      xpos += 80;\r\n    }\r\n    /// Increment y pointer by 80px after every iteration\r\n    ypos += 80;\r\n  }\r\n};\r\n\r\n// Draw player to grid\r\nconst drawPlayer = (xPosition, yPosition) => {\r\n  ctx.beginPath();\r\n  ctx.moveTo(xPosition, yPosition);\r\n  ctx.fillStyle = \"#2f2f2f\";\r\n  ctx.fillRect(xPosition + 10, yPosition + 10, 20, 20);\r\n};\r\nexport { mapArray, ctx };\r\nexport default drawGrid;\r\n","import { ctx } from \"./map\";\r\nimport { padding } from \"../index\";\r\nconst drawPlayer = player => {\r\n  setTimeout(() => {\r\n    ctx.drawImage(\r\n      player.img,\r\n      player.position.x + padding,\r\n      player.position.y + padding,\r\n      50,\r\n      50\r\n    );\r\n  }, 500);\r\n};\r\nconst drawWeapon = weapon => {\r\n  ctx.drawImage(\r\n    weapon.img,\r\n    weapon.canvasPosition.x + 10,\r\n    weapon.canvasPosition.y + 10,\r\n    50,\r\n    50\r\n  );\r\n};\r\n\r\nexport { drawPlayer, drawWeapon };\r\n","const p1DamageEl = document.querySelector(\".player1-damage\");\r\nconst p2DamageEl = document.querySelector(\".player2-damage\");\r\nconst playerTurnEl = document.querySelector(\".player__turn\");\r\nconst updatePlayer1HP = document.querySelector(\".player1-hp\");\r\nconst updatePlayer2HP = document.querySelector(\".player2-hp\");\r\n\r\nconst updateHP = player => {\r\n  if (player.id === 1) {\r\n    updatePlayer1HP.textContent = `${player.health}`;\r\n  } else if (player.id === 2) {\r\n    updatePlayer2HP.textContent = `${player.health}`;\r\n  }\r\n};\r\nconst updateWeaponUI = player => {\r\n  if (player.id === 1) {\r\n    p1DamageEl.textContent = `${player.damage}`;\r\n  } else if (player.id === 2) {\r\n    p2DamageEl.textContent = `${player.damage}`;\r\n  }\r\n};\r\n\r\nconst updateTurn = turn => {\r\n  playerTurnEl.textContent = `${turn}`;\r\n};\r\nexport { updateWeaponUI, updateTurn, updateHP };\r\n","import { player1, player2, playerTurn, setTurn } from \"../index\";\r\nimport { updateTurn, updateWeaponUI, updateHP } from \"../component/dom\";\r\nconst fightBtnEl = document.querySelector(\".fight__btn\");\r\nconst gameOverEl = document.createElement(\"p\");\r\nconst fightBox = document.querySelector(\".gameOver\");\r\n\r\nconst startFight = (player1, player2, playerTurn) => {\r\n  fightBtnEl.disabled = false;\r\n};\r\nfightBtnEl.addEventListener(\"click\", () => {\r\n  console.log(player1, player2);\r\n  if (playerTurn === 1) {\r\n    player2.updateHealth(player1.damage);\r\n    updateHP(player2);\r\n    setTurn(2);\r\n    updateTurn(2);\r\n    if (player2.health <= 0) {\r\n      fightBtnEl.setAttribute(\"disabled\", \"true\");\r\n      gameOverEl.textContent = `Game Ove, Player 1 wins`;\r\n      fightBox.appendChild(gameOverEl);\r\n    }\r\n  } else if (playerTurn === 2) {\r\n    player1.updateHealth(player2.damage);\r\n    updateHP(player1);\r\n    setTurn(1);\r\n    updateTurn(1);\r\n    if (player1.health <= 0) {\r\n      fightBtnEl.setAttribute(\"disabled\", \"true\");\r\n      gameOverEl.textContent = `Game Ove, Player 2 wins`;\r\n      fightBox.appendChild(gameOverEl);\r\n    }\r\n  }\r\n});\r\nexport default startFight;\r\n","import { mapArray } from \"./map\";\r\nlet min = 0;\r\nlet maxCol = 15;\r\nlet maxRow = 8;\r\nconst offset = 80;\r\nconst randomCol = () => Math.floor(Math.random() * (maxCol - min + 1)) + min;\r\nconst randomRow = () => Math.floor(Math.random() * (maxRow - min + 1)) + min;\r\nclass Player {\r\n  constructor(id, img, damage = 10, health = 100, weapon = {}) {\r\n    this.id = id;\r\n    this.img = img;\r\n    this.damage = damage;\r\n    this.health = health;\r\n    this.hasWeapon = false;\r\n    this.weapon = weapon;\r\n    this.position = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.indexPosition = {\r\n      row: 0,\r\n      col: 0\r\n    };\r\n    this.init = () => {\r\n      // Get random row and col indexes for they player position\r\n      let rowPosition = randomRow();\r\n      let colPosition = randomCol();\r\n      // Check if the cell is blocked or not\r\n      if (!mapArray[rowPosition][colPosition]) {\r\n        // Check if it is first row\r\n        if (rowPosition > 0) {\r\n          // if the row is greater than one increment y pointer 40*noOfRows\r\n          for (let i = 0; i < rowPosition; i++) {\r\n            this.position.y += 80;\r\n          }\r\n        }\r\n        // Check if it is first col\r\n        if (colPosition > 0) {\r\n          // if the col is greater than one increment x pointer 40*noOfCols\r\n          for (let j = 0; j < colPosition; j++) {\r\n            this.position.x += 80;\r\n          }\r\n        }\r\n        // Updating player index position\r\n        this.indexPosition.row = rowPosition;\r\n        this.indexPosition.col = colPosition;\r\n      } else {\r\n        // If 'if' condition fails this function will be called again. Recursive function\r\n        return this.init();\r\n      }\r\n    };\r\n    this.init();\r\n  }\r\n  moveLeft() {\r\n    this.position.x -= offset;\r\n    this.indexPosition.col -= 1;\r\n  }\r\n  moveUp() {\r\n    this.position.y -= offset;\r\n    this.indexPosition.row -= 1;\r\n  }\r\n  moveRight() {\r\n    this.position.x += offset;\r\n    this.indexPosition.col += 1;\r\n  }\r\n  moveDown() {\r\n    this.position.y += offset;\r\n    this.indexPosition.row += 1;\r\n  }\r\n  updatePlayerProperties(damage) {\r\n    this.damage = damage;\r\n    console.log(this.damage);\r\n  }\r\n  updatePlayerWeapon(weapon) {\r\n    this.weapon = weapon;\r\n  }\r\n  updateWeaponState() {\r\n    this.hasWeapon = true;\r\n  }\r\n  updateHealth(health) {\r\n    this.health -= health;\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","import { mapArray } from \"./map\";\r\nlet min = 0;\r\nlet maxCol = 15;\r\nlet maxRow = 8;\r\nconst randomCol = () => Math.floor(Math.random() * (maxCol - min + 1)) + min;\r\nconst randomRow = () => Math.floor(Math.random() * (maxRow - min + 1)) + min;\r\nexport default class Weapons {\r\n  constructor(img, damage, id) {\r\n    this.img = img;\r\n    this.damage = damage;\r\n    this.id = id;\r\n    this.canvasPosition = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.indexPosition = {\r\n      row: 0,\r\n      col: 0\r\n    };\r\n    this.init = () => {\r\n      // Get random row and col indexes for they player position\r\n      let rowPosition = randomRow();\r\n      let colPosition = randomCol();\r\n      // Check if the cell is blocked or not\r\n      if (!mapArray[rowPosition][colPosition]) {\r\n        // Check if it is first row\r\n        if (rowPosition > 0) {\r\n          // if the row is greater than one increment y pointer 40*noOfRows\r\n          for (let i = 0; i < rowPosition; i++) {\r\n            this.canvasPosition.y += 80;\r\n          }\r\n        }\r\n        // Check if it is first col\r\n        if (colPosition > 0) {\r\n          // if the col is greater than one increment x pointer 40*noOfCols\r\n          for (let j = 0; j < colPosition; j++) {\r\n            this.canvasPosition.x += 80;\r\n          }\r\n        }\r\n        // Updating player index position\r\n        this.indexPosition.row = rowPosition;\r\n        this.indexPosition.col = colPosition;\r\n      } else {\r\n        // If 'if' condition fails this function will be called again. Recursive function\r\n        return this.init();\r\n      }\r\n    };\r\n    this.init();\r\n  }\r\n  updateWeaponPosition(canvasPosition, indexPosition) {\r\n    this.canvasPosition = canvasPosition;\r\n    this.indexPosition = indexPosition;\r\n  }\r\n}\r\n","import \"../sass/main.scss\";\r\n// import \"./component/map\";\r\nimport drawGrid, { mapArray, ctx } from \"./component/map\";\r\nimport { drawPlayer, drawWeapon } from \"./component/draw\";\r\nimport startFight from \"./component/fight\";\r\nimport Player from \"./component/player\";\r\nimport Weapons from \"./component/weapons\";\r\nimport { updateWeaponUI, updateTurn } from \"./component/dom\";\r\n\r\nconst p1 = document.querySelector(\"#player1\");\r\nconst p2 = document.querySelector(\"#player2\");\r\nconst knife = document.querySelector(\"#knife\");\r\nconst sowrd = document.querySelector(\"#sowrd\");\r\nconst akm = document.querySelector(\"#akm\");\r\nconst p13 = document.querySelector(\"#p13\");\r\n\r\nlet playerTurn = 1;\r\nlet tileSize = 80;\r\n\r\nconst setTurn = value => {\r\n  playerTurn = value;\r\n};\r\nconst m4 = new Weapons(knife, 20, 1);\r\nconst g3 = new Weapons(akm, 15, 2);\r\nconst ump = new Weapons(sowrd, 50, 3);\r\nconst kar98 = new Weapons(p13, 40, 4);\r\nconst weaponPosition = [m4, g3, ump, kar98];\r\n\r\nsetTimeout(() => {\r\n  drawWeapon(m4);\r\n  drawWeapon(g3);\r\n  drawWeapon(ump);\r\n  drawWeapon(kar98);\r\n}, 500);\r\nconst offset = 80;\r\nconst padding = 20;\r\nlet oldWeapon = {\r\n  indexPosition: {\r\n    row: 0,\r\n    col: 0\r\n  }\r\n};\r\nlet p1PreviousPosition = {\r\n  canvasPosition: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  indexPosition: {\r\n    row: 0,\r\n    col: 0\r\n  }\r\n};\r\nlet p2PreviousPosition = {\r\n  canvasPosition: {\r\n    x: 0,\r\n    y: 0\r\n  },\r\n  indexPosition: {\r\n    row: 0,\r\n    col: 0\r\n  }\r\n};\r\nconst drawOldWeapon = (weapon, player) => {\r\n  if (player.id === 1) {\r\n    if (\r\n      weapon.indexPosition.row === p1PreviousPosition.indexPosition.row &&\r\n      weapon.indexPosition.col === p1PreviousPosition.indexPosition.col\r\n    ) {\r\n      drawWeapon(weapon);\r\n    }\r\n  } else if (player.id === 2) {\r\n    if (\r\n      weapon.indexPosition.row === p2PreviousPosition.indexPosition.row &&\r\n      weapon.indexPosition.col === p2PreviousPosition.indexPosition.col\r\n    ) {\r\n      drawWeapon(weapon);\r\n    }\r\n  }\r\n};\r\n\r\nconst updateOldWeaponPosition = (weapon, player) => {\r\n  weapon.canvasPosition = {\r\n    x: player.position.x,\r\n    y: player.position.y\r\n  };\r\n  weapon.indexPosition = {\r\n    row: player.indexPosition.row,\r\n    col: player.indexPosition.col\r\n  };\r\n};\r\nconst maintainPreviousPosition = player => {\r\n  if (player.id === 1) {\r\n    p1PreviousPosition.canvasPosition = {\r\n      x: player.position.x,\r\n      y: player.position.y\r\n    };\r\n    p1PreviousPosition.indexPosition = {\r\n      row: player.indexPosition.row,\r\n      col: player.indexPosition.col\r\n    };\r\n  } else if (player.id === 2) {\r\n    p2PreviousPosition.canvasPosition = {\r\n      x: player.position.x,\r\n      y: player.position.y\r\n    };\r\n    p2PreviousPosition.indexPosition = {\r\n      row: player.indexPosition.row,\r\n      col: player.indexPosition.col\r\n    };\r\n  }\r\n};\r\nconst arrowKeysCode = {\r\n  left: 37,\r\n  up: 38,\r\n  right: 39,\r\n  down: 40\r\n};\r\n\r\n// Draw grid to canvas\r\ndrawGrid();\r\n\r\n// Create new Player\r\nconst player1 = new Player(1, p1);\r\nconst player2 = new Player(2, p2);\r\n\r\n// Clear cell when player leaves\r\nconst clearCell = player => {\r\n  ctx.clearRect(player.position.x + 5, player.position.y + 5, 70, 70);\r\n};\r\nconst chkWeapon = player => {\r\n  return weaponPosition.findIndex(weapon => {\r\n    return (\r\n      player.indexPosition.row === weapon.indexPosition.row &&\r\n      player.indexPosition.col === weapon.indexPosition.col\r\n    );\r\n  });\r\n};\r\n/// Update weapon\r\nconst updateWeapon = (weaponIndex, player) => {\r\n  let weapon = weaponPosition[weaponIndex];\r\n  player.updatePlayerProperties(weapon.damage);\r\n  updateWeaponUI(player);\r\n\r\n  if (player.hasWeapon) {\r\n    oldWeapon = player.weapon;\r\n    updateOldWeaponPosition(oldWeapon, player);\r\n    weaponPosition.push(oldWeapon);\r\n    weaponPosition.splice(weaponIndex, 1);\r\n    console.log(player, weapon, oldWeapon);\r\n    player.updatePlayerWeapon(weapon);\r\n  } else {\r\n    weaponPosition.splice(weaponIndex, 1);\r\n    player.updateWeaponState();\r\n    player.updatePlayerWeapon(weapon);\r\n  }\r\n};\r\n// Draw player to canvas\r\ndrawPlayer(player1);\r\ndrawPlayer(player2);\r\n\r\nfunction areClose(a, b) {\r\n  return (\r\n    Math.abs(a.position.x - b.position.x) < 2 * tileSize &&\r\n    Math.abs(a.position.y - b.position.y) < 2 * tileSize\r\n  );\r\n}\r\nconst moveLeft = player => {\r\n  maintainPreviousPosition(player);\r\n  clearCell(player);\r\n  player.moveLeft();\r\n  if (areClose(player1, player2)) {\r\n    startFight(player1, player2, playerTurn);\r\n  }\r\n\r\n  let weaponIndex = chkWeapon(player);\r\n  if (weaponIndex > -1) {\r\n    updateWeapon(weaponIndex, player);\r\n    drawPlayer(player);\r\n  } else {\r\n    drawPlayer(player);\r\n  }\r\n  drawOldWeapon(oldWeapon, player);\r\n};\r\nconst moveUp = player => {\r\n  maintainPreviousPosition(player);\r\n  clearCell(player);\r\n\r\n  player.moveUp();\r\n\r\n  if (areClose(player1, player2)) {\r\n    startFight(player1, player2, playerTurn);\r\n  }\r\n\r\n  let weaponIndex = chkWeapon(player);\r\n  if (weaponIndex > -1) {\r\n    updateWeapon(weaponIndex, player);\r\n    drawPlayer(player);\r\n  } else {\r\n    drawPlayer(player);\r\n  }\r\n  drawOldWeapon(oldWeapon, player);\r\n};\r\nconst moveRight = player => {\r\n  {\r\n    maintainPreviousPosition(player);\r\n    clearCell(player);\r\n\r\n    player.moveRight();\r\n    if (areClose(player1, player2)) {\r\n      startFight(player1, player2, playerTurn);\r\n    }\r\n\r\n    let weaponIndex = chkWeapon(player);\r\n    if (weaponIndex > -1) {\r\n      updateWeapon(weaponIndex, player);\r\n      drawPlayer(player);\r\n    } else {\r\n      drawPlayer(player);\r\n    }\r\n    drawOldWeapon(oldWeapon, player);\r\n  }\r\n};\r\nconst moveDown = player => {\r\n  {\r\n    maintainPreviousPosition(player);\r\n    clearCell(player);\r\n    player.moveDown();\r\n\r\n    if (areClose(player1, player2)) {\r\n      startFight(player1, player2, playerTurn);\r\n    }\r\n\r\n    let weaponIndex = chkWeapon(player);\r\n    if (weaponIndex > -1) {\r\n      updateWeapon(weaponIndex, player);\r\n      drawPlayer(player);\r\n    } else {\r\n      drawPlayer(player);\r\n    }\r\n    drawOldWeapon(oldWeapon, player);\r\n  }\r\n};\r\n// Event listener for the arrow keys\r\nwindow.addEventListener(\"keydown\", e => {\r\n  switch (e.keyCode) {\r\n    case arrowKeysCode.left:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row][\r\n              player1.indexPosition.col - 1\r\n            ] &&\r\n            player1.indexPosition.col > 0\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n            moveLeft(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row][\r\n              player2.indexPosition.col - 1\r\n            ] &&\r\n            player2.indexPosition.col > 0\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveLeft(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.up:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row - 1][\r\n              player1.indexPosition.col\r\n            ] &&\r\n            player1.indexPosition.row > 0\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n\r\n            moveUp(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row - 1][\r\n              player2.indexPosition.col\r\n            ] &&\r\n            player2.indexPosition.row > 0\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveUp(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.right:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row][\r\n              player1.indexPosition.col + 1\r\n            ] &&\r\n            player1.indexPosition.col <\r\n              mapArray[player1.indexPosition.row].length - 1\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n\r\n            moveRight(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row][\r\n              player2.indexPosition.col + 1\r\n            ] &&\r\n            player2.indexPosition.col <\r\n              mapArray[player2.indexPosition.row].length - 1\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveRight(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    case arrowKeysCode.down:\r\n      if (!areClose(player1, player2)) {\r\n        if (playerTurn === 1) {\r\n          if (\r\n            !mapArray[player1.indexPosition.row + 1][\r\n              player1.indexPosition.col\r\n            ] &&\r\n            player1.indexPosition.row < mapArray.length - 1\r\n          ) {\r\n            playerTurn = 2;\r\n            updateTurn(playerTurn);\r\n\r\n            moveDown(player1);\r\n          } else {\r\n            playerTurn = 1;\r\n          }\r\n        } else if (playerTurn === 2) {\r\n          if (\r\n            !mapArray[player2.indexPosition.row + 1][\r\n              player2.indexPosition.col\r\n            ] &&\r\n            player2.indexPosition.row < mapArray.length - 1\r\n          ) {\r\n            playerTurn = 1;\r\n            updateTurn(playerTurn);\r\n\r\n            moveDown(player2);\r\n          } else {\r\n            playerTurn = 2;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n  }\r\n});\r\n\r\nexport { padding, player1, player2, playerTurn, setTurn };\r\n"],"sourceRoot":""}